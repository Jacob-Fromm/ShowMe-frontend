{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\nimport { connect } from \"react-redux\";\nimport { setUser, getFans } from \"../Redux/actions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst Login = props => {\n  _s();\n\n  const classes = useStyles();\n  let history = useHistory();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const formChangeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const loginHandler = e => {\n    e.preventDefault();\n    let foundUser = props.fans.find(fan => user.email == fan.email);\n    props.loginUser(foundUser);\n    history.push(`/fans/${foundUser.id}`);\n  };\n\n  console.log(\"login props\", props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: loginHandler,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"email\",\n          label: \"email\",\n          value: user.email,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-password-input\",\n          type: \"password\",\n          name: \"password\",\n          label: \"password\",\n          value: user.password,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"AnEw7gwHTrcVLCwtm4frhqUKshc=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\n\nconst msp = state => {\n  return {\n    state: state\n  };\n};\n\nconst mdp = dispatch => {\n  return {\n    loginUser: userObj => dispatch(setUser(userObj))\n  };\n};\n\nexport default connect(mdp, msp)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/Login.jsx"],"names":["React","useState","useHistory","FormControl","FormLabel","FormHelperText","Input","InputLabel","makeStyles","TextField","Button","connect","setUser","getFans","useStyles","theme","root","display","flexDirection","alignItems","margin","spacing","Login","props","classes","history","user","email","password","formChangeHandler","e","name","value","target","loginHandler","preventDefault","foundUser","fans","find","fan","loginUser","push","id","console","log","msp","state","mdp","dispatch","userObj"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\nimport { connect } from \"react-redux\"\nimport {setUser, getFans} from \"../Redux/actions\"\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst Login = (props) => {\n    const classes = useStyles();\n    let history = useHistory();\n    \n    const[user, setUser] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    \n    const formChangeHandler = (e) => {\n        const { name, value } = e.target\n        setUser({ ...user, [name]: value })\n    }\n\n    const loginHandler = (e) => {\n        e.preventDefault()\n        let foundUser = props.fans.find(fan => user.email == fan.email )\n        props.loginUser(foundUser)\n        history.push(`/fans/${foundUser.id}`)\n    }\n\n    console.log(\"login props\", props)\n    \n\n    return (\n        <>\n            <h2>Login</h2>\n            <FormControl>\n                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={loginHandler}>\n                <TextField id=\"standard-basic\" name=\"email\" label=\"email\" value={user.email} onChange={formChangeHandler}/>\n                <TextField id=\"standard-password-input\" type=\"password\" name=\"password\" label=\"password\" value={user.password} onChange={formChangeHandler}/>\n                <Button type=\"submit\">Submit</Button>\n                </form>\n            </FormControl>\n        </>\n        \n    )\n}\n\nconst msp = (state) => {\n    return {state: state}\n}\n\nconst mdp = (dispatch) => {\n    return { loginUser: (userObj) => dispatch(setUser(userObj)) }\n}\n\n\nexport default connect(mdp, msp)(Login)"]},"metadata":{},"sourceType":"module"}