{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/App.js\";\nimport logo from \"./logo.svg\";\nimport 'fontsource-roboto';\nimport { Typography } from '@material-ui/core';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport SignupComedian from './Components/SignupComedian';\nimport ComedianProfile from './Components/ComedianPreview';\nimport ComediansContainer from \"./Containers/ComediansContainer\";\nimport Header from \"./Components/Header\";\nimport { connect } from 'react-redux';\nimport { getShows, getComics } from \"./Redux/actions\";\nimport Links from \"./Components/NavBar\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: this.props.currentUser,\n      isLoggedIn: this.props.isLoggedIn,\n      api: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchShows();\n    this.props.fetchComics();\n    fetch('http://localhost:3000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          name: \"jacobus\",\n          email: \"jacob@sylvia.com\",\n          password: \"pissword\"\n        }\n      })\n    }).then(r => r.json()).then(console.log);\n  } // comedianSignupSubmitHandler = (newUser) => {\n  //   console.log(\"new user in app.js\", newUser)\n  //   fetch(\"http://localhost:3000/api/v1/comedians\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       \"accept\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       comedian: {\n  //         name: newUser.name,\n  //         email: newUser.email,\n  //         password: newUser.password,\n  //         personal_website: newUser.website,\n  //         city: newUser.city\n  //       }\n  //     })\n  //   })\n  //     .then(r => r.json())\n  //     .then(user => {\n  //       this.setState({ currentUser: user, isComedianLoggedIn: true })\n  //     })\n  // }\n\n\n  render() {\n    console.log(\"redux state in app\", this.props.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: `/fans/`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(Links, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            render: () => /*#__PURE__*/_jsxDEV(SignupComedian, {\n              signupHandler: this.comedianSignupSubmitHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/comedians\",\n            render: () => /*#__PURE__*/_jsxDEV(ComediansContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    fetchShows: () => dispatch(getShows()),\n    fetchComics: () => dispatch(getComics())\n  };\n};\n\nconst msp = state => {\n  return {\n    state: state\n  };\n};\n\nexport default connect(msp, mdp)(withRouter(App));","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/App.js"],"names":["Typography","React","Component","BrowserRouter","Router","Switch","Route","Link","Redirect","withRouter","Welcome","SignupComedian","ComedianProfile","ComediansContainer","Header","connect","getShows","getComics","Links","App","state","currentUser","props","isLoggedIn","api","componentDidMount","fetchShows","fetchComics","fetch","method","headers","Accept","body","JSON","stringify","user","name","email","password","then","r","json","console","log","render","comedianSignupSubmitHandler","mdp","dispatch","msp"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport 'fontsource-roboto';\nimport { Typography } from '@material-ui/core';\nimport './App.css';\nimport React, {Component} from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\"; \nimport Welcome from \"./Components/Welcome\"\nimport SignupComedian from './Components/SignupComedian';\nimport ComedianProfile from './Components/ComedianPreview';\nimport ComediansContainer from \"./Containers/ComediansContainer\"\nimport Header from \"./Components/Header\"\nimport { connect } from 'react-redux'\nimport { getShows, getComics } from \"./Redux/actions\"\nimport Links from \"./Components/NavBar\"\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: this.props.currentUser,\n    isLoggedIn: this.props.isLoggedIn,\n    api: []\n  }\n\n  componentDidMount(){\n    this.props.fetchShows()\n    this.props.fetchComics()\n    fetch('http://localhost:3000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          name: \"jacobus\",\n          email: \"jacob@sylvia.com\",\n          password: \"pissword\"\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(console.log)\n\n  }\n\n  // comedianSignupSubmitHandler = (newUser) => {\n  //   console.log(\"new user in app.js\", newUser)\n  //   fetch(\"http://localhost:3000/api/v1/comedians\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       \"accept\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       comedian: {\n  //         name: newUser.name,\n  //         email: newUser.email,\n  //         password: newUser.password,\n  //         personal_website: newUser.website,\n  //         city: newUser.city\n  //       }\n  //     })\n  //   })\n  //     .then(r => r.json())\n  //     .then(user => {\n  //       this.setState({ currentUser: user, isComedianLoggedIn: true })\n  //     })\n  // }\n  \n  render(){\n      console.log(\"redux state in app\", this.props.state)\n      return (\n        <>\n        {this.props.isLoggedIn ? \n        <>\n          <Redirect to={`/fans/`}/>\n        </>\n        \n        \n        : \n        <>\n        \n          <div className=\"header\">\n              <Links />\n              <Header />\n          </div>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Welcome /> } />\n            <Route path=\"/signup\" render={() => <SignupComedian signupHandler={this.comedianSignupSubmitHandler} />}/>\n            <Route path=\"/comedians\" render={() => <ComediansContainer /> } />\n          </Switch>\n        \n        </>\n        \n        \n        }\n\n        </>\n      );\n  }\n  \n}\n\nconst mdp = (dispatch) => {\n  return { fetchShows: () => dispatch(getShows()), fetchComics: () => dispatch(getComics()) }\n\n}\n\nconst msp = (state) => {\n  return {state: state}\n}\n\nexport default connect(msp, mdp)(withRouter(App))\n"]},"metadata":{},"sourceType":"module"}