{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_COMICS_FROM_FETCH, ADD_SHOWS_FROM_FETCH, ADD_SHOW, EDIT_SHOW, DELETE_SHOW, ADD_COMEDIAN, SET_FAN, ADD_FANS_FROM_FETCH, SET_USER, FOLLOW_COMIC } from \"./actionTypes\"; // const rootReducer = (state = {\n//     comedians: [],\n//     shows: []\n// }, action) => {\n//     console.log(\"reducer action:\", action)\n//     switch (action.type) {\n//         case \"ADD_SHOW\":\n//             return { ...state, shows: [...state.shows, action.payload] }\n//         case \"ADD_SHOWS_FROM_FETCH\":\n//             return {...state, shows: action.payload }\n//         case \"ADD_COMICS_FROM_FETCH\":\n//             return { ...state, comedians: action.payload }\n//         default:\n//             return state\n//     }\n// }\n\nconst defaultState = {\n  comedians: [],\n  shows: [],\n  fans: [],\n  currentUser: {},\n  isLoggedIn: false\n};\n\nfunction usersReduer(state = defaultState.currentUser, action) {\n  switch (action.type) {\n    case SET_FAN:\n      return action.payload;\n\n    case SET_USER:\n      console.log(action.payload);\n      return action.payload;\n\n    case FOLLOW_COMIC:\n      return [...state, action];\n\n    default:\n      return state;\n  }\n}\n\nfunction loginReducer(state = defaultState.isLoggedIn, action) {\n  switch (action.type) {\n    case SET_FAN:\n      return true;\n\n    default:\n      return state;\n  }\n}\n\nfunction fansReducer(state = defaultState.fans, action) {\n  switch (action.type) {\n    case ADD_FANS_FROM_FETCH:\n      console.log(\"fans fetch\", action.payload);\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nfunction comediansReducer(state = defaultState.comedians, action) {\n  switch (action.type) {\n    case ADD_COMICS_FROM_FETCH:\n      return action.payload;\n\n    case ADD_COMEDIAN:\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}\n\nfunction showsReducer(state = defaultState.shows, action) {\n  switch (action.type) {\n    case ADD_SHOWS_FROM_FETCH:\n      return action.payload;\n\n    case ADD_SHOW:\n      console.log(\"new show:\", action.payload);\n      return [...state, action.payload];\n\n    case EDIT_SHOW:\n      break;\n\n    case DELETE_SHOW:\n      break;\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  comedians: comediansReducer,\n  events: showsReducer,\n  fans: fansReducer,\n  currentUser: usersReduer,\n  isLoggedIn: loginReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Redux/reducer.js"],"names":["combineReducers","ADD_COMICS_FROM_FETCH","ADD_SHOWS_FROM_FETCH","ADD_SHOW","EDIT_SHOW","DELETE_SHOW","ADD_COMEDIAN","SET_FAN","ADD_FANS_FROM_FETCH","SET_USER","FOLLOW_COMIC","defaultState","comedians","shows","fans","currentUser","isLoggedIn","usersReduer","state","action","type","payload","console","log","loginReducer","fansReducer","comediansReducer","showsReducer","rootReducer","events"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,EAAsDC,QAAtD,EAAgEC,SAAhE,EAA2EC,WAA3E,EAAwFC,YAAxF,EAAsGC,OAAtG,EAA+GC,mBAA/G,EAAoIC,QAApI,EAA8IC,YAA9I,QAAiK,eAAjK,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAArB;;AAQA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAAY,CAACI,WAA1C,EAAuDI,MAAvD,EAA8D;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,OAAL;AACI,aAAOY,MAAM,CAACE,OAAd;;AACJ,SAAKZ,QAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,aAAOF,MAAM,CAACE,OAAd;;AACJ,SAAKX,YAAL;AAEQ,aAAO,CAAC,GAAGQ,KAAJ,EAAWC,MAAX,CAAP;;AACR;AACI,aAAOD,KAAP;AAVR;AAYH;;AAED,SAASM,YAAT,CAAsBN,KAAK,GAACP,YAAY,CAACK,UAAzC,EAAqDG,MAArD,EAA4D;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,OAAL;AACI,aAAO,IAAP;;AACJ;AACI,aAAOW,KAAP;AAJR;AAMH;;AAED,SAASO,WAAT,CAAqBP,KAAK,GAACP,YAAY,CAACG,IAAxC,EAA8CK,MAA9C,EAAqD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,mBAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,MAAM,CAACE,OAAjC;AACA,aAAOF,MAAM,CAACE,OAAd;;AACJ;AACI,aAAOH,KAAP;AALR;AAOH;;AAED,SAASQ,gBAAT,CAA0BR,KAAK,GAAGP,YAAY,CAACC,SAA/C,EAA0DO,MAA1D,EAAiE;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,qBAAL;AACI,aAAOkB,MAAM,CAACE,OAAd;;AACJ,SAAKf,YAAL;AACI,aAAO,CAAC,GAAGY,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ;AACI,aAAOH,KAAP;AANR;AAUH;;AACD,SAASS,YAAT,CAAsBT,KAAK,GAAGP,YAAY,CAACE,KAA3C,EAAkDM,MAAlD,EAAyD;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,oBAAL;AACI,aAAOiB,MAAM,CAACE,OAAd;;AACH,SAAKlB,QAAL;AACImB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAM,CAACE,OAAhC;AACA,aAAQ,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAR;;AACJ,SAAKjB,SAAL;AACI;;AACJ,SAAKC,WAAL;AACI;;AACL;AACI,aAAOa,KAAP;AAXR;AAaF;;AAID,MAAMU,WAAW,GAAG5B,eAAe,CAAC;AAChCY,EAAAA,SAAS,EAAEc,gBADqB;AAEhCG,EAAAA,MAAM,EAAEF,YAFwB;AAGhCb,EAAAA,IAAI,EAAEW,WAH0B;AAIhCV,EAAAA,WAAW,EAAEE,WAJmB;AAKhCD,EAAAA,UAAU,EAAEQ;AALoB,CAAD,CAAnC;AAQA,eAAeI,WAAf","sourcesContent":["import {combineReducers} from \"redux\"\nimport { ADD_COMICS_FROM_FETCH, ADD_SHOWS_FROM_FETCH, ADD_SHOW, EDIT_SHOW, DELETE_SHOW, ADD_COMEDIAN, SET_FAN, ADD_FANS_FROM_FETCH, SET_USER, FOLLOW_COMIC} from \"./actionTypes\";\n\n// const rootReducer = (state = {\n//     comedians: [],\n//     shows: []\n// }, action) => {\n//     console.log(\"reducer action:\", action)\n//     switch (action.type) {\n//         case \"ADD_SHOW\":\n//             return { ...state, shows: [...state.shows, action.payload] }\n//         case \"ADD_SHOWS_FROM_FETCH\":\n//             return {...state, shows: action.payload }\n//         case \"ADD_COMICS_FROM_FETCH\":\n//             return { ...state, comedians: action.payload }\n//         default:\n//             return state\n//     }\n\n// }\n\nconst defaultState = {\n    comedians: [],\n    shows: [],\n    fans: [],\n    currentUser: {},\n    isLoggedIn: false\n}\n\nfunction usersReduer(state = defaultState.currentUser, action){\n    switch (action.type) {\n        case SET_FAN:\n            return action.payload\n        case SET_USER:\n            console.log(action.payload)\n            return action.payload\n        case FOLLOW_COMIC:\n            \n                return [...state, action]\n        default:\n            return state\n    }\n}\n\nfunction loginReducer(state=defaultState.isLoggedIn, action){\n    switch (action.type) {\n        case SET_FAN:\n            return true\n        default: \n            return state\n    }\n}\n\nfunction fansReducer(state=defaultState.fans, action){\n    switch (action.type) {\n        case ADD_FANS_FROM_FETCH:\n            console.log(\"fans fetch\", action.payload)\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction comediansReducer(state = defaultState.comedians, action){\n    switch (action.type) {\n        case ADD_COMICS_FROM_FETCH:\n            return action.payload\n        case ADD_COMEDIAN:\n            return [...state, action.payload]\n        default:\n            return state\n          \n    }\n    \n}\nfunction showsReducer(state = defaultState.shows, action){\n   switch (action.type) {\n       case ADD_SHOWS_FROM_FETCH:\n           return action.payload\n        case ADD_SHOW:\n            console.log(\"new show:\", action.payload)\n            return  [...state, action.payload]\n        case EDIT_SHOW:\n            break;\n        case DELETE_SHOW:\n            break;\n       default:\n           return state\n   }\n}\n\n\n\nconst rootReducer = combineReducers({\n    comedians: comediansReducer,\n    events: showsReducer,\n    fans: fansReducer,\n    currentUser: usersReduer,\n    isLoggedIn: loginReducer\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}