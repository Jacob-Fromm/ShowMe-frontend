{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/SignupComedian.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { addComic } from \"../Redux/actions\";\nimport { Redirect, Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction SignupComedian(props) {\n  _s();\n\n  const classes = useStyles();\n  const [newComedian, setComedian] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    headshot_link: \"\",\n    website: \"\",\n    city: \"\",\n    genre: \"\"\n  });\n  const [isLoggedIn, setLoggedIn] = useState(false); // const toggle = React.useCallback(() => setLoggedin(!isLoggedIn));\n\n  const changeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setComedian({ ...newComedian,\n      [name]: value\n    });\n  };\n\n  console.log(\"signup props\", props);\n\n  const comedianSubmitHandler = e => {\n    e.preventDefault();\n    props.postComic(newComedian);\n    setLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/comedians\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comedian Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          noValidate: true,\n          autoComplete: \"off\",\n          onSubmit: comedianSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"name\",\n            label: \"Name\",\n            value: newComedian.name,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"email\",\n            label: \"Email\",\n            value: newComedian.email,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"password\",\n            label: \"Password\",\n            value: newComedian.password,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"website\",\n            label: \"Website\",\n            value: newComedian.website,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"headshot_link\",\n            label: \"Link to Headshot\",\n            value: newComedian.headshot_link,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"city\",\n            label: \"City\",\n            value: newComedian.city,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            name: \"genre\",\n            label: \"Genre\",\n            value: newComedian.genre,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignupComedian, \"n99KAuLFLsikcONKHM163YPrG0Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignupComedian;\n\nconst mdp = dispatch => {\n  return {\n    postComic: comedianObj => dispatch(addComic(comedianObj))\n  };\n};\n\nexport default connect(null, mdp)(SignupComedian);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupComedian\");","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/SignupComedian.jsx"],"names":["React","Component","useState","FormControl","FormLabel","FormHelperText","Input","InputLabel","makeStyles","TextField","Button","connect","addComic","Redirect","Link","useStyles","theme","root","display","flexDirection","alignItems","margin","spacing","SignupComedian","props","classes","newComedian","setComedian","name","email","password","headshot_link","website","city","genre","isLoggedIn","setLoggedIn","changeHandler","e","value","target","console","log","comedianSubmitHandler","preventDefault","postComic","mdp","dispatch","comedianObj"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport { addComic } from \"../Redux/actions\"\nimport {Redirect, Link} from \"react-router-dom\"\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\n\n\nfunction SignupComedian(props){\n    const classes = useStyles();\n    \n    const [newComedian, setComedian] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        headshot_link: \"\",\n        website: \"\",\n        city: \"\",\n        genre: \"\"\n    })\n\n    const [isLoggedIn, setLoggedIn] = useState(false)\n    // const toggle = React.useCallback(() => setLoggedin(!isLoggedIn));\n\n\n    const changeHandler = (e) => {\n        const {name, value} = e.target\n        setComedian({...newComedian, [name]: value})\n    }\n\n    console.log(\"signup props\", props)\n\n    const comedianSubmitHandler = (e) => {\n       e.preventDefault()\n       props.postComic(newComedian)\n       setLoggedIn(true)\n    }\n\n    return(\n        <>\n        \n        {isLoggedIn ? \n           \n             < Redirect to = \"/comedians\" />\n           \n            \n           \n            \n            \n            : \n        \n            <div className=\"signup\">\n                <h1>Comedian Signup</h1>\n                {/* <form>\n                    <input name=\"name\" type=\"text\" placeholder=\"enter name\" value={newComedian[\"name\"]} onChange={changeHandler} /> <br></br><br></br>\n                    <input name=\"headshot_link\" type=\"text\" placeholder=\"enter link to headshot\" value={newComedian[\"headshot_link\"]} onChange={changeHandler} /> <br></br><br></br>\n                    <input name=\"website\" type=\"text\" placeholder=\"enter personal website\" value={newComedian[\"website\"]} onChange={changeHandler} /> <br></br><br></br>\n                    <input name=\"city\" type=\"text\" placeholder=\"enter city\" value={newComedian[\"city\"]} onChange={changeHandler} /> <br></br><br></br>\n                    <input name=\"genre\" type=\"text\" placeholder=\"enter genre\" value={newComedian[\"genre\"]} onChange={changeHandler} /> <br></br><br></br>\n                </form> */}\n    \n                <FormControl>\n                    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={comedianSubmitHandler}>\n                        <TextField id=\"standard-basic\" name=\"name\" label=\"Name\" value={newComedian.name} onChange={changeHandler} />\n                        <TextField id=\"standard-basic\" name=\"email\" label=\"Email\" value={newComedian.email} onChange={changeHandler} />\n                        <TextField id=\"standard-basic\" name=\"password\" label=\"Password\" value={newComedian.password} onChange={changeHandler} />\n                        <TextField id=\"standard-basic\" name=\"website\" label=\"Website\" value={newComedian.website} onChange={changeHandler} />\n                        <TextField id=\"standard-basic\" name=\"headshot_link\" label=\"Link to Headshot\" value={newComedian.headshot_link} onChange={changeHandler} />\n                        <TextField id=\"standard-basic\" name=\"city\" label=\"City\" value={newComedian.city} onChange={changeHandler} />\n                        <TextField id=\"standard-basic\" name=\"genre\" label=\"Genre\" value={newComedian.genre} onChange={changeHandler} />\n                        <Button type=\"submit\">Submit</Button>\n                        {/* <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n                    <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /> */}\n                    </form>\n                </FormControl>\n    \n                \n            </div>\n        \n        }\n        </>\n        \n    )\n}\n\nconst mdp = (dispatch) => {\n    return { postComic: (comedianObj) => dispatch(addComic(comedianObj)) }\n}\n\nexport default connect(null, mdp)(SignupComedian)"]},"metadata":{},"sourceType":"module"}