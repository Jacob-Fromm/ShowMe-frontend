{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/ShowCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, TextField } from '@material-ui/core';\nimport NewShowForm from \"./NewShowForm\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction ShowCard(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const toggle = React.useCallback(() => setEditing(!isToggled));\n  const classes = useStyles();\n\n  const clickHandler = e => {\n    setEditing(!!editing);\n    console.log(editing.currentlyEditing);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.venue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        onClick: clickHandler,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ShowCard, \"2bg6Tna0vH6rQrh8UjqDOEg/ZoU=\", false, function () {\n  return [useStyles];\n});\n\n_c = ShowCard;\nexport default ShowCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowCard\");","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/ShowCard.jsx"],"names":["React","Component","useState","makeStyles","Button","FormControl","FormLabel","FormHelperText","Input","InputLabel","TextField","NewShowForm","useStyles","theme","root","margin","spacing","ShowCard","props","isEditing","setEditing","toggle","useCallback","isToggled","classes","clickHandler","e","editing","console","log","currentlyEditing","venue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,cAAjC,EAAiDC,KAAjD,EAAwDC,UAAxD,EAAoEC,SAApE,QAAqF,mBAArF;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,aAAS;AACLC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AADP;AAD+B,CAAZ,CAAD,CAA5B;;AAQA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMmB,MAAM,GAAGrB,KAAK,CAACsB,WAAN,CAAkB,MAAMF,UAAU,CAAC,CAACG,SAAF,CAAlC,CAAf;AAEA,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,UAAU,CAAC,CAAC,CAACO,OAAH,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,gBAApB;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA,gBAAIZ,KAAK,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACV,IAAxB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,IAAI,EAAC,OAAjC;AAAyC,QAAA,OAAO,EAAEW,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AASH;;GApBQR,Q;UAIWL,S;;;KAJXK,Q;AAsBT,eAAeA,QAAf","sourcesContent":["import React, {Component, useState } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, TextField } from '@material-ui/core';\nimport NewShowForm from \"./NewShowForm\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nfunction ShowCard (props) {\n    const [isEditing, setEditing] = useState(false)\n    const toggle = React.useCallback(() => setEditing(!isToggled));\n    \n    const classes = useStyles();\n\n    const clickHandler = (e) => {\n        setEditing(!!editing)\n        console.log(editing.currentlyEditing)\n    }\n    \n    return (\n        <>\n            <p>{props.venue}</p>\n            <div className={classes.root}>\n                <Button variant=\"contained\" size=\"small\" onClick={clickHandler}>edit</Button>\n            </div>\n        </>\n    )\n    \n}\n\nexport default ShowCard"]},"metadata":{},"sourceType":"module"}