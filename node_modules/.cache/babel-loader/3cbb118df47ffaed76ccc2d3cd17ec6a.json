{"ast":null,"code":"import { ADD_SHOW, GET_SHOWS, ADD_SHOWS_FROM_FETCH, ADD_COMICS_FROM_FETCH } from \"./actionTypes\";\nexport const addShow = showObj => {\n  console.log(\"addShow action\", showObj);\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/events\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        event: {\n          comedian_id: showObj.comedi_id,\n          date_time: showObj.date_time,\n          is_irl: showObj.is_irl,\n          is_virtual: showObj.is_virtual,\n          venue: showObj.venue,\n          address: showObj.address,\n          comedian_id: showObj.comedi_id,\n          comedian_id: showObj.comedi_id,\n          comedian_id: showObj.comedi_id,\n          comedian_id: showObj.comedi_id\n        }\n      })\n    }).then(resp => resp.json()).then(data => dispatch({\n      type: ADD_SHOW,\n      payload: data\n    }));\n  };\n};\nexport const getShows = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/events\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_SHOWS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const getComics = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedians\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_COMICS_FROM_FETCH,\n      payload: data\n    }));\n  };\n}; // dispatch({ type: GET_SHOWS, payload: data })","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Redux/actions.js"],"names":["ADD_SHOW","GET_SHOWS","ADD_SHOWS_FROM_FETCH","ADD_COMICS_FROM_FETCH","addShow","showObj","console","log","dispatch","fetch","method","headers","body","JSON","stringify","event","comedian_id","comedi_id","date_time","is_irl","is_virtual","venue","address","then","resp","json","data","type","payload","getShows","getComics"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,oBAA9B,EAAoDC,qBAApD,QAAgF,eAAhF;AAEA,OAAO,MAAMC,OAAO,GAAGC,OAAO,IAAI;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,OAA9B;AACA,SAAO,UAAUG,QAAV,EAAoB;AACvBC,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFgC;AAMzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAE;AACHC,UAAAA,WAAW,EAAEX,OAAO,CAACY,SADlB;AAEHC,UAAAA,SAAS,EAAEb,OAAO,CAACa,SAFhB;AAGHC,UAAAA,MAAM,EAAEd,OAAO,CAACc,MAHb;AAIHC,UAAAA,UAAU,EAAEf,OAAO,CAACe,UAJjB;AAKHC,UAAAA,KAAK,EAAEhB,OAAO,CAACgB,KALZ;AAMHC,UAAAA,OAAO,EAAEjB,OAAO,CAACiB,OANd;AAOHN,UAAAA,WAAW,EAAEX,OAAO,CAACY,SAPlB;AAQHD,UAAAA,WAAW,EAAEX,OAAO,CAACY,SARlB;AASHD,UAAAA,WAAW,EAAEX,OAAO,CAACY,SATlB;AAUHD,UAAAA,WAAW,EAAEX,OAAO,CAACY;AAVlB;AADU,OAAf;AANmC,KAAxC,CAAL,CAqBKM,IArBL,CAqBUC,IAAI,IAAEA,IAAI,CAACC,IAAL,EArBhB,EAsBKF,IAtBL,CAsBUG,IAAI,IAAIlB,QAAQ,CAAC;AAACmB,MAAAA,IAAI,EAAE3B,QAAP;AAAiB4B,MAAAA,OAAO,EAAEF;AAA1B,KAAD,CAtB1B;AAwBH,GAzBD;AA0BH,CA5BM;AA8BP,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC1B,SAAO,UAAUrB,QAAV,EAAoB;AACvBC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACKc,IADL,CACUC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADhB,EAEKF,IAFL,CAEUG,IAAI,IAAIlB,QAAQ,CAAC;AAACmB,MAAAA,IAAI,EAAEzB,oBAAP;AAA6B0B,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAF1B;AAGH,GAJD;AAKH,CANM;AAOP,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAO,UAAUtB,QAAV,EAAoB;AACvBC,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKc,IADL,CACUC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADhB,EAEKF,IAFL,CAEUG,IAAI,IAAIlB,QAAQ,CAAC;AAACmB,MAAAA,IAAI,EAAExB,qBAAP;AAA8ByB,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAF1B;AAGH,GAJD;AAKH,CANM,C,CAUP","sourcesContent":["import { ADD_SHOW, GET_SHOWS, ADD_SHOWS_FROM_FETCH, ADD_COMICS_FROM_FETCH} from \"./actionTypes\";\n\nexport const addShow = showObj => {\n    console.log(\"addShow action\", showObj)\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/events\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                event: {\n                    comedian_id: showObj.comedi_id,\n                    date_time: showObj.date_time,\n                    is_irl: showObj.is_irl,\n                    is_virtual: showObj.is_virtual,\n                    venue: showObj.venue,\n                    address: showObj.address,\n                    comedian_id: showObj.comedi_id,\n                    comedian_id: showObj.comedi_id,\n                    comedian_id: showObj.comedi_id,\n                    comedian_id: showObj.comedi_id,\n                }\n            })\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_SHOW, payload: data}))\n\n    }\n}\n\nexport const getShows = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/events\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_SHOWS_FROM_FETCH, payload: data}))\n    }\n}\nexport const getComics = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedians\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_COMICS_FROM_FETCH, payload: data}))\n    }\n}\n\n\n\n// dispatch({ type: GET_SHOWS, payload: data })"]},"metadata":{},"sourceType":"module"}