{"ast":null,"code":"import { ADD_SHOW, ADD_SHOWS_FROM_FETCH, ADD_COMICS_FROM_FETCH, EDIT_SHOW, ADD_COMEDIAN, SET_FAN, ADD_FANS_FROM_FETCH, SET_USER, ADD_FOLLOWED_COMICS_FROM_FETCH, FOLLOW_COMIC, SIGNUP_USER } from \"./actionTypes\";\nexport const addShow = showObj => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/events\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(showObj)\n    }).then(resp => resp.json()) // .then(data => console.log(data))\n    .then(data => dispatch({\n      type: ADD_SHOW,\n      payload: data\n    }));\n  };\n};\nexport const addComic = comedianObj => {\n  console.log(\"submitted comedian:\", comedianObj);\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedians\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(comedianObj)\n    }).then(resp => resp.json()).then(console.log); // .then(data => dispatch({ type: ADD_COMEDIAN, payload: data }))\n  };\n};\nexport const editShow = showObj => {\n  console.log(\"show to edit\", showObj);\n  return function (dispatch) {\n    fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(showObj)\n    }).then(resp => resp.json()).then(data => dispatch(getShows()));\n  };\n};\nexport const deleteShow = showObj => {\n  console.log(\"show to delete\", showObj);\n  return function (dispatch) {\n    fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n      method: \"DELETE\"\n    }).then(resp => resp.json()).then(data => dispatch(getShows()));\n  };\n};\nexport const getFollowedComics = followObj => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedian_fans\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_FOLLOWED_COMICS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const followComic = (followObj, currentUser) => {\n  return function (dispatch) {\n    // console.log(currentUser)\n    fetch(\"http://localhost:3000/api/v1/comedian_fans\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        comedian_id: followObj.id,\n        fan_id: currentUser.id\n      })\n    }).then(resp => resp.json()).then(data => dispatch({\n      type: FOLLOW_COMIC,\n      payload: followObj\n    }));\n  };\n};\nexport const getShows = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/events\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_SHOWS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const getComics = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedians\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_COMICS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const getFans = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/fans\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_FANS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const setFan = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/fans/3\").then(resp => resp.json()).then(data => dispatch({\n      type: SET_FAN,\n      payload: data\n    }));\n  };\n};\nexport const setUser = userObj => {\n  return {\n    type: SET_USER,\n    payload: userObj\n  };\n};\nexport const signupUser = newUser => {\n  console.log(\"newUser in action: \", newUser);\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: newUser\n      })\n    }).then(resp => resp.json()).then(data => dispatch({\n      type: SET_USER,\n      payload: data\n    }));\n  };\n};\nexport const loginUser = userObj => {\n  console.log(\"userObj in action: \", userObj);\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: userObj\n      })\n    }).then(resp => resp.json()).then(data => {\n      console.log(\"token in action \", data);\n      localStorage.setItem(\"token\", data.jwt);\n      dispatch({\n        type: SET_USER,\n        payload: data.user\n      });\n    });\n  };\n}; // dispatch({ type: GET_SHOWS, payload: data })","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Redux/actions.js"],"names":["ADD_SHOW","ADD_SHOWS_FROM_FETCH","ADD_COMICS_FROM_FETCH","EDIT_SHOW","ADD_COMEDIAN","SET_FAN","ADD_FANS_FROM_FETCH","SET_USER","ADD_FOLLOWED_COMICS_FROM_FETCH","FOLLOW_COMIC","SIGNUP_USER","addShow","showObj","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","data","type","payload","addComic","comedianObj","console","log","editShow","id","getShows","deleteShow","getFollowedComics","followObj","followComic","currentUser","comedian_id","fan_id","getComics","getFans","setFan","setUser","userObj","signupUser","newUser","user","loginUser","localStorage","setItem","jwt"],"mappings":"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","sourcesContent":["import { ADD_SHOW, ADD_SHOWS_FROM_FETCH, ADD_COMICS_FROM_FETCH, EDIT_SHOW, ADD_COMEDIAN, SET_FAN, ADD_FANS_FROM_FETCH, SET_USER, ADD_FOLLOWED_COMICS_FROM_FETCH, FOLLOW_COMIC, SIGNUP_USER} from \"./actionTypes\";\n\nexport const addShow = showObj => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/events\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify(showObj)\n        })\n            .then(resp => resp.json())\n            // .then(data => console.log(data))\n            .then(data => dispatch({ type: ADD_SHOW, payload: data }))\n    }\n}\n\nexport const addComic = comedianObj => {\n    console.log(\"submitted comedian:\", comedianObj)\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedians\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify(comedianObj)\n        })\n            .then(resp => resp.json())\n            .then(console.log)\n            // .then(data => dispatch({ type: ADD_COMEDIAN, payload: data }))\n    }\n}\n\nexport const editShow = showObj => {\n    console.log(\"show to edit\", showObj)\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify(showObj)\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch(getShows()))\n            \n    }\n}\nexport const deleteShow = showObj => {\n    console.log(\"show to delete\", showObj)\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n            method: \"DELETE\"\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch(getShows()))\n            \n    }\n}\n\nexport const getFollowedComics = followObj => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedian_fans\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_FOLLOWED_COMICS_FROM_FETCH, payload: data}))\n    }\n}\n\nexport const followComic = (followObj, currentUser) => {\n    return function (dispatch) {\n        // console.log(currentUser)\n        fetch(\"http://localhost:3000/api/v1/comedian_fans\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                    comedian_id: followObj.id,\n                    fan_id: currentUser.id\n            })\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: FOLLOW_COMIC, payload: followObj}))\n    }\n}\n\nexport const getShows = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/events\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_SHOWS_FROM_FETCH, payload: data}))\n    }\n}\nexport const getComics = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedians\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_COMICS_FROM_FETCH, payload: data}))\n    }\n}\n\nexport const getFans = () => {\n    return function (dispatch){\n        fetch(\"http://localhost:3000/api/v1/fans\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_FANS_FROM_FETCH, payload: data}))\n    }\n}\n\nexport const setFan = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/fans/3\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: SET_FAN, payload: data}))\n    }\n}\n\nexport const setUser = userObj => {\n    return {\n        type: SET_USER,\n        payload: userObj\n    }\n}\n\nexport const signupUser = newUser => {\n    console.log(\"newUser in action: \", newUser)\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/users\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accepts\": \"application/json\"\n            },\n            body: JSON.stringify({user: newUser})\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: SET_USER, payload: data}))\n    }\n}\n\nexport const loginUser = userObj => {\n    console.log(\"userObj in action: \", userObj)\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/login\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accepts\": \"application/json\"\n            },\n            body: JSON.stringify({user: userObj})\n        })\n            .then(resp=>resp.json())\n            .then(data => {\n                console.log(\"token in action \", data)\n                localStorage.setItem(\"token\", data.jwt)\n                dispatch({ type: SET_USER, payload: data.user })})\n    }\n}\n\n\n// dispatch({ type: GET_SHOWS, payload: data })"]},"metadata":{},"sourceType":"module"}