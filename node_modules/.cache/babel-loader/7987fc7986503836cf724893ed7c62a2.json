{"ast":null,"code":"import { ADD_SHOW, ADD_SHOWS_FROM_FETCH, ADD_COMICS_FROM_FETCH, EDIT_SHOW, ADD_COMEDIAN, SET_FAN, ADD_FANS_FROM_FETCH, SET_USER } from \"./actionTypes\";\nexport const addShow = showObj => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/events\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(showObj)\n    }).then(resp => resp.json()) // .then(data => console.log(data))\n    .then(data => dispatch({\n      type: ADD_SHOW,\n      payload: data\n    }));\n  };\n};\nexport const addComic = comedianObj => {\n  console.log(\"submitted comedian:\", comedianObj);\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedians\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(comedianObj)\n    }).then(resp => resp.json()).then(console.log); // .then(data => dispatch({ type: ADD_COMEDIAN, payload: data }))\n  };\n};\nexport const editShow = showObj => {\n  console.log(\"show to edit\", showObj);\n  return function (dispatch) {\n    fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(showObj)\n    }).then(resp => resp.json()).then(data => dispatch(getShows()));\n  };\n};\nexport const deleteShow = showObj => {\n  console.log(\"show to delete\", showObj);\n  return function (dispatch) {\n    fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n      method: \"DELETE\"\n    }).then(resp => resp.json()).then(data => dispatch(getShows()));\n  };\n};\nexport const followComic = followObj => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedian_fans\", {\n      headers: {}\n    }).then(resp => resp.json()).then(console.log);\n  };\n};\nexport const getShows = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/events\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_SHOWS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const getComics = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/comedians\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_COMICS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const getFans = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/fans\").then(resp => resp.json()).then(data => dispatch({\n      type: ADD_FANS_FROM_FETCH,\n      payload: data\n    }));\n  };\n};\nexport const setFan = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/api/v1/fans/3\").then(resp => resp.json()).then(data => dispatch({\n      type: SET_FAN,\n      payload: data\n    }));\n  };\n};\nexport const setUser = userObj => {\n  return {\n    type: SET_USER,\n    payload: userObj\n  };\n}; // dispatch({ type: GET_SHOWS, payload: data })","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Redux/actions.js"],"names":["ADD_SHOW","ADD_SHOWS_FROM_FETCH","ADD_COMICS_FROM_FETCH","EDIT_SHOW","ADD_COMEDIAN","SET_FAN","ADD_FANS_FROM_FETCH","SET_USER","addShow","showObj","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","data","type","payload","addComic","comedianObj","console","log","editShow","id","getShows","deleteShow","followComic","followObj","getComics","getFans","setFan","setUser","userObj"],"mappings":"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","sourcesContent":["import { ADD_SHOW, ADD_SHOWS_FROM_FETCH, ADD_COMICS_FROM_FETCH, EDIT_SHOW, ADD_COMEDIAN, SET_FAN, ADD_FANS_FROM_FETCH, SET_USER} from \"./actionTypes\";\n\nexport const addShow = showObj => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/events\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify(showObj)\n        })\n            .then(resp => resp.json())\n            // .then(data => console.log(data))\n            .then(data => dispatch({ type: ADD_SHOW, payload: data }))\n    }\n}\n\nexport const addComic = comedianObj => {\n    console.log(\"submitted comedian:\", comedianObj)\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedians\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify(comedianObj)\n        })\n            .then(resp => resp.json())\n            .then(console.log)\n            // .then(data => dispatch({ type: ADD_COMEDIAN, payload: data }))\n    }\n}\n\nexport const editShow = showObj => {\n    console.log(\"show to edit\", showObj)\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify(showObj)\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch(getShows()))\n            \n    }\n}\nexport const deleteShow = showObj => {\n    console.log(\"show to delete\", showObj)\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/v1/events/${showObj.id}`, {\n            method: \"DELETE\"\n        })\n            .then(resp=>resp.json())\n            .then(data => dispatch(getShows()))\n            \n    }\n}\n\nexport const followComic = followObj => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedian_fans\", {\n            headers: {}\n        })\n            .then(resp=>resp.json())\n            .then(console.log)\n\n    }\n}\n\nexport const getShows = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/events\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_SHOWS_FROM_FETCH, payload: data}))\n    }\n}\nexport const getComics = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/comedians\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_COMICS_FROM_FETCH, payload: data}))\n    }\n}\n\nexport const getFans = () => {\n    return function (dispatch){\n        fetch(\"http://localhost:3000/api/v1/fans\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: ADD_FANS_FROM_FETCH, payload: data}))\n    }\n}\n\nexport const setFan = () => {\n    return function (dispatch) {\n        fetch(\"http://localhost:3000/api/v1/fans/3\")\n            .then(resp=>resp.json())\n            .then(data => dispatch({type: SET_FAN, payload: data}))\n    }\n}\n\nexport const setUser = userObj => {\n    return {\n        type: SET_USER,\n        payload: userObj\n    }\n}\n\n\n\n// dispatch({ type: GET_SHOWS, payload: data })"]},"metadata":{},"sourceType":"module"}