{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/EditShowForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\nimport { addShow } from \"../Redux/actions\";\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction EditShowForm(props) {\n  _s();\n\n  const classes = useStyles();\n  console.log(\"edit show form props\", props);\n  const [editedShow, setShow] = useState({\n    date_time: props.show.date_time,\n    comedian_id: props.show.comedian_id,\n    is_virtual: props.show.is_virtual,\n    venue: props.show.venue,\n    address: props.show.address,\n    phone_number: props.show.phone_number,\n    ticket_link: props.show.ticket_link,\n    ticket_price: props.show.ticket_price,\n    venue_website: props.show.venue_website\n  });\n\n  const formChangeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setShow({ ...newShow,\n      [name]: value\n    });\n  };\n\n  const submitShowHandler = e => {\n    e.preventDefault();\n    props.postShow(newShow);\n    setShow({\n      date_time: \"2017-05-24T10:30\",\n      comedian_id: props.comedian.id,\n      is_virtual: false,\n      venue: \"\",\n      address: \"\",\n      phone_number: \"\",\n      ticket_link: \"\",\n      ticket_price: 0,\n      venue_website: \"\"\n    });\n  };\n\n  const editShowHandler = e => {\n    e.preventDefault();\n    props.patchShow(newShow);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Show From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: editShowHandler,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"datetime-local\",\n          label: \"Show Date and Time\",\n          type: \"datetime-local\",\n          className: classes.textField,\n          InputLabelProps: {\n            shrink: true\n          },\n          value: newShow.date_time,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"is_virtual\",\n          label: \"Is this show virtual?\",\n          value: newShow.is_virtual,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"venue\",\n          label: \"Venue Name\",\n          value: newShow.venue,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"address\",\n          label: \"Address\",\n          value: newShow.address,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"phone_number\",\n          label: \"Phone Number\",\n          value: newShow.phone_number,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"ticket_link\",\n          label: \"Link to Tickets\",\n          value: newShow.ticket_link,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"ticket_price\",\n          label: \"Ticket Price\",\n          value: newShow.ticket_price,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: \"venue_website\",\n          label: \"Venue Website\",\n          value: newShow.venue_website,\n          onChange: formChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} // write to the store\n\n\n_s(EditShowForm, \"TLzWtDTYDlZhJd6E3fZi4mJ1H8A=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditShowForm;\n\nconst mdp = dispatch => {\n  return {\n    patchShow: showObj => dispatch(editShow(showObj))\n  };\n};\n\nexport default connect(null, mdp)(EditShowForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditShowForm\");","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Components/EditShowForm.jsx"],"names":["React","Component","useState","FormControl","FormLabel","FormHelperText","Input","InputLabel","makeStyles","TextField","Button","addShow","connect","useStyles","theme","root","display","flexDirection","alignItems","margin","spacing","EditShowForm","props","classes","console","log","editedShow","setShow","date_time","show","comedian_id","is_virtual","venue","address","phone_number","ticket_link","ticket_price","venue_website","formChangeHandler","e","name","value","target","newShow","submitShowHandler","preventDefault","postShow","comedian","id","editShowHandler","patchShow","textField","shrink","mdp","dispatch","showObj","editShow"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\nimport { addShow } from \"../Redux/actions\"\nimport { connect } from 'react-redux'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nfunction EditShowForm(props) {\n    const classes = useStyles();\n    console.log(\"edit show form props\", props)\n    const [editedShow, setShow] = useState({\n        date_time: props.show.date_time,\n        comedian_id: props.show.comedian_id,\n        is_virtual: props.show.is_virtual,\n        venue: props.show.venue,\n        address: props.show.address,\n        phone_number: props.show.phone_number,\n        ticket_link: props.show.ticket_link,\n        ticket_price: props.show.ticket_price,\n        venue_website: props.show.venue_website\n    })\n\n    const formChangeHandler = (e) => {\n        const { name, value } = e.target\n        setShow({ ...newShow, [name]: value })\n    }\n\n    const submitShowHandler = (e) => {\n        e.preventDefault()\n        props.postShow(newShow)\n        setShow({\n            date_time: \"2017-05-24T10:30\",\n            comedian_id: props.comedian.id,\n            is_virtual: false,\n            venue: \"\",\n            address: \"\",\n            phone_number: \"\",\n            ticket_link: \"\",\n            ticket_price: 0,\n            venue_website: \"\"\n        })\n    }\n\n\n\n    const editShowHandler = (e) => {\n        e.preventDefault()\n        props.patchShow(newShow)\n    }\n\n    return (\n        <>\n            <h3>Edit Show From</h3>\n            <FormControl>\n                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={editShowHandler}>\n                    <TextField\n                        id=\"datetime-local\"\n                        label=\"Show Date and Time\"\n                        type=\"datetime-local\"\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={newShow.date_time}\n                        onChange={formChangeHandler}\n                    />\n                    <TextField id=\"standard-basic\" name=\"is_virtual\" label=\"Is this show virtual?\" value={newShow.is_virtual} onChange={formChangeHandler} />\n                    <TextField id=\"standard-basic\" name=\"venue\" label=\"Venue Name\" value={newShow.venue} onChange={formChangeHandler} />\n                    <TextField id=\"standard-basic\" name=\"address\" label=\"Address\" value={newShow.address} onChange={formChangeHandler} />\n                    <TextField id=\"standard-basic\" name=\"phone_number\" label=\"Phone Number\" value={newShow.phone_number} onChange={formChangeHandler} />\n                    <TextField id=\"standard-basic\" name=\"ticket_link\" label=\"Link to Tickets\" value={newShow.ticket_link} onChange={formChangeHandler} />\n                    <TextField id=\"standard-basic\" name=\"ticket_price\" label=\"Ticket Price\" value={newShow.ticket_price} onChange={formChangeHandler} />\n                    <TextField id=\"standard-basic\" name=\"venue_website\" label=\"Venue Website\" value={newShow.venue_website} onChange={formChangeHandler} />\n                    <Button type=\"submit\">Submit</Button>\n                    {/* <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n                <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /> */}\n                </form>\n            </FormControl>\n        </>\n    )\n}\n\n\n// write to the store\nconst mdp = (dispatch) => {\n    return { patchShow: (showObj) => dispatch(editShow(showObj)) }\n}\n\nexport default connect(null, mdp)(EditShowForm)"]},"metadata":{},"sourceType":"module"}