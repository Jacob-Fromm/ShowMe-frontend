{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Containers/ComediansContainer.jsx\";\nimport React, { Component } from \"react\";\nimport ComedianPreview from \"../Components/ComedianPreview\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport ComedianProfileContainer from \"./ComedianProfileContainer\";\nimport { getShows, getComics } from \"../Redux/actions\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nconst ComediansContainer = props => {\n  console.log(\"comedian container props\", this.props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome-page\",\n    children: this.props.comedians.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 50\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/comedians/:id\",\n        render: ({\n          match\n        }) => {\n          let id = parseInt(match.params.id);\n          let foundComedian = this.props.comedians.find(comic => comic.id === id);\n          return /*#__PURE__*/_jsxDEV(ComedianProfileContainer, {\n            comedian: foundComedian\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 32\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/comedians\",\n        render: () => {\n          const comedians = this.props.comedians.map(comedianObj => /*#__PURE__*/_jsxDEV(ComedianPreview, {\n            id: comedianObj.id,\n            comedian: comedianObj,\n            name: comedianObj.name,\n            website: comedianObj.personal_website,\n            headshot: comedianObj.headshot,\n            city: comedianObj.city\n          }, comedianObj.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 83\n          }, this));\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.props.comedians.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"LOADING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 70\n            }, this) : comedians\n          }, void 0, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/welcome\",\n        render: () => {\n          const comedians = this.props.comedians.map(comedianObj => /*#__PURE__*/_jsxDEV(ComedianPreview, {\n            id: comedianObj.id,\n            comedian: comedianObj,\n            name: comedianObj.name,\n            website: comedianObj.personal_website,\n            headshot: comedianObj.headshot,\n            city: comedianObj.city\n          }, comedianObj.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 83\n          }, this));\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-display\",\n              children: this.props.comedians.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"LOADING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 70\n              }, this) : comedians\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}; // const mdp = (dispatch) => {\n//     return {fetchShows: () => dispatch(getShows()), fetchComics: () => dispatch(getComics())}\n// }\n\n\n_c = ComediansContainer;\n\nconst msp = state => {\n  console.log(\"current redux state:\", state);\n  return {\n    comedians: state.comedians,\n    shows: state.shows\n  };\n};\n\nexport default connect(msp)(ComediansContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ComediansContainer\");","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Containers/ComediansContainer.jsx"],"names":["React","Component","ComedianPreview","Route","Switch","connect","ComedianProfileContainer","getShows","getComics","Grid","makeStyles","useStyles","theme","root","flexGrow","ComediansContainer","props","console","log","comedians","length","match","id","parseInt","params","foundComedian","find","comic","map","comedianObj","name","personal_website","headshot","city","msp","state","shows"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport ComedianPreview from \"../Components/ComedianPreview\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport ComedianProfileContainer from \"./ComedianProfileContainer\"\nimport {getShows, getComics} from \"../Redux/actions\"\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    }\n}))\n\nconst ComediansContainer =  (props) => {\n\n    console.log(\"comedian container props\", this.props)\n    return (\n\n\n        <div className=\"welcome-page\">\n\n            {this.props.comedians.length === 0 ? <h1>LOADING</h1> :\n\n                <Switch>\n                    <Route path=\"/comedians/:id\" render={({ match }) => {\n                        let id = parseInt(match.params.id)\n                        let foundComedian = this.props.comedians.find((comic) => comic.id === id)\n                        return <ComedianProfileContainer comedian={foundComedian} />\n                    }} />\n                    <Route path=\"/comedians\" render={() => {\n                        const comedians = this.props.comedians.map(comedianObj => <ComedianPreview key={comedianObj.id} id={comedianObj.id} comedian={comedianObj} name={comedianObj.name} website={comedianObj.personal_website} headshot={comedianObj.headshot} city={comedianObj.city} />)\n                        return (\n                            <>\n                                {this.props.comedians.length === 0 ? <h1>LOADING</h1> : comedians}\n                            </>\n                        )\n                    }} />\n                    <Route path=\"/welcome\" render={() => {\n                        const comedians = this.props.comedians.map(comedianObj => <ComedianPreview key={comedianObj.id} id={comedianObj.id} comedian={comedianObj} name={comedianObj.name} website={comedianObj.personal_website} headshot={comedianObj.headshot} city={comedianObj.city} />)\n                        return (\n                            <>\n                            <div className=\"welcome-display\">\n                                {this.props.comedians.length === 0 ? <h1>LOADING</h1> : comedians}\n                            </div>\n                            </>\n                        )\n                    }} />\n                </Switch>\n            }\n\n        </div>\n    )\n\n    \n\n}\n\n// const mdp = (dispatch) => {\n//     return {fetchShows: () => dispatch(getShows()), fetchComics: () => dispatch(getComics())}\n    \n// }\n\nconst msp = (state) => {\n    console.log(\"current redux state:\", state)\n    return {comedians: state.comedians, shows: state.shows}\n}\n\nexport default connect(msp)(ComediansContainer)"]},"metadata":{},"sourceType":"module"}