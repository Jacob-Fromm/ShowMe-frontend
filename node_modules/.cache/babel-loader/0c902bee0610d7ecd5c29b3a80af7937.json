{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Containers/ComediansContainer.jsx\";\nimport React from \"react\";\nimport ComedianPreview from \"../Components/ComedianPreview\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport ComedianProfileContainer from \"./ComedianProfileContainer\";\nimport { getShows, getComics } from \"../Redux/actions\";\n\nclass ComediansContainer extends React.Component {\n  componentDidMount() {\n    this.props.fetchShows();\n    this.props.fetchComics();\n  }\n\n  render() {\n    console.log(\"comedian container props\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comedians Container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), this.props.comedians.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 54\n      }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/comedians/:id\",\n          render: ({\n            match\n          }) => {\n            let id = parseInt(match.params.id);\n            let foundComedian = this.props.comedians.find(comic => comic.id === id);\n            return /*#__PURE__*/_jsxDEV(ComedianProfileContainer, {\n              comedian: foundComedian\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 36\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/comedians\",\n          render: () => {\n            const comedians = this.props.comedians.map(comedianObj => /*#__PURE__*/_jsxDEV(ComedianPreview, {\n              id: comedianObj.id,\n              comedian: comedianObj,\n              name: comedianObj.name,\n              website: comedianObj.personal_website,\n              headshot: comedianObj.headshot,\n              city: comedianObj.city\n            }, comedianObj.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 87\n            }, this));\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: this.props.comedians.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"LOADING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 74\n              }, this) : comedians\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    fetchShows: () => dispatch(getShows()),\n    fetchComics: () => dispatch(getComics())\n  };\n};\n\nconst msp = state => {\n  console.log(\"current redux state:\", state);\n  return {\n    comedians: state.comedians,\n    shows: state.shows\n  };\n};\n\nexport default connect(msp, mdp)(ComediansContainer);","map":{"version":3,"sources":["/Users/jsfromm/Flatiron/code/mod5/project/ShowMe-frontend/src/Containers/ComediansContainer.jsx"],"names":["React","ComedianPreview","Route","Switch","connect","ComedianProfileContainer","getShows","getComics","ComediansContainer","Component","componentDidMount","props","fetchShows","fetchComics","render","console","log","comedians","length","match","id","parseInt","params","foundComedian","find","comic","map","comedianObj","name","personal_website","headshot","city","mdp","dispatch","msp","state","shows"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ComedianPreview from \"../Components/ComedianPreview\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport ComedianProfileContainer from \"./ComedianProfileContainer\"\nimport {getShows, getComics} from \"../Redux/actions\"\n\nclass ComediansContainer extends React.Component {\n    \n    componentDidMount() {\n        this.props.fetchShows()\n        this.props.fetchComics()\n    }\n\n    render() {\n        console.log(\"comedian container props\")\n        return (\n\n            <>\n                <h1>Comedians Container</h1>\n\n                {this.props.comedians.length === 0 ? <h1>LOADING</h1> :\n\n                    <Switch>\n                        <Route path=\"/comedians/:id\" render={({ match }) => {\n                            let id = parseInt(match.params.id)\n                            let foundComedian = this.props.comedians.find((comic) => comic.id === id)\n                            return <ComedianProfileContainer comedian={foundComedian} />\n                        }} />\n                        <Route path=\"/comedians\" render={() => {\n                            const comedians = this.props.comedians.map(comedianObj => <ComedianPreview key={comedianObj.id} id={comedianObj.id} comedian={comedianObj} name={comedianObj.name} website={comedianObj.personal_website} headshot={comedianObj.headshot} city={comedianObj.city} />)\n                            return (\n                                <>\n                                    {this.props.comedians.length === 0 ? <h1>LOADING</h1> : comedians}\n                                </>\n                            )\n                        }} />\n                    </Switch>\n                }\n\n            </>\n        )\n\n    }\n\n}\n\nconst mdp = (dispatch) => {\n    return {fetchShows: () => dispatch(getShows()), fetchComics: () => dispatch(getComics())}\n    \n}\n\nconst msp = (state) => {\n    console.log(\"current redux state:\", state)\n    return {comedians: state.comedians, shows: state.shows}\n}\n\nexport default connect(msp, mdp)(ComediansContainer)"]},"metadata":{},"sourceType":"module"}